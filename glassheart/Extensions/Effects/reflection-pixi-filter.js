var gdjs;(function(n){n.PixiFiltersTools.registerFilterCreator("Reflection",new class extends n.PixiFiltersTools.PixiFilterCreator{makePIXIFilter(i,e){let t=0;return new PIXI.filters.ReflectionFilter({mirror:e.booleanParameters.mirror,boundary:e.doubleParameters.boundary,amplitude:[e.doubleParameters.amplitudeStart,e.doubleParameters.amplitudeEnding],waveLength:[e.doubleParameters.waveLengthStart,e.doubleParameters.waveLengthEnding],alpha:[e.doubleParameters.alphaStart,e.doubleParameters.alphaEnding],time:t})}updatePreRender(i,e){const t=i;t.animationSpeed!==0&&(t.time+=e.getElapsedTime()/1e3*t.animationSpeed)}updateDoubleParameter(i,e,t){const r=i;e==="boundary"&&(r.boundary=t),e==="amplitudeStart"&&(r.amplitude[0]=t),e==="amplitudeEnding"&&(r.amplitude[1]=t),e==="waveLengthStart"&&(r.waveLength[0]=t),e==="waveLengthEnding"&&(r.waveLength[1]=t),e==="alphaStart"&&(r.alpha[0]=t),e==="alphaEnding"&&(r.alpha[1]=t),e==="animationSpeed"&&(r.animationSpeed=t)}getDoubleParameter(i,e){const t=i;return e==="boundary"?t.boundary:e==="amplitudeStart"?t.amplitude[0]:e==="amplitudeEnding"?t.amplitude[1]:e==="waveLengthStart"?t.waveLength[0]:e==="waveLengthEnding"?t.waveLength[1]:e==="alphaStart"?t.alpha[0]:e==="alphaEnding"?t.alpha[1]:e==="animationSpeed"?t.animationSpeed:0}updateStringParameter(i,e,t){}updateColorParameter(i,e,t){}getColorParameter(i,e){return 0}updateBooleanParameter(i,e,t){const r=i;e==="mirror"&&(r.mirror=t)}})})(gdjs||(gdjs={}));
//# sourceMappingURL=reflection-pixi-filter.js.map
